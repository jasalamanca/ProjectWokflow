cmake_minimum_required(VERSION 3.25 FATAL_ERROR)

# ProjectWorkflow cmake modules
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../cmake")

project(PWSemverTest)

include(semver)

function(check_semver_version_ version checkBase checkPre checkBuild checkValid)
    semver_splitVersion_("${version}" base_ pre_ build_ valid_)
    if((NOT valid_ AND checkValid) OR (valid_ AND NOT checkValid))
        if(checkValid)
            message(FATAL_ERROR "\"${version}\" is NOT valid!!")
        else()
            message(FATAL_ERROR "\"${version}\" is valid!!")
        endif()
    endif()

    if(valid_)
        if(NOT "${base_}" STREQUAL "${checkBase}")
            message(FATAL_ERROR "From \"${version}\" 1-> \"${base_}\" differs from \"${checkBase}\"")
        endif()
        if(NOT "${pre_}" STREQUAL "${checkPre}")
            message(FATAL_ERROR "From \"${version}\" 2-> \"${pre_}\" differs from \"${checkPre}\"")
        endif()
        if(NOT "${build_}" STREQUAL "${checkBuild}")
            message(FATAL_ERROR "From \"${version}\" 3-> \"${build_}\" differs from \"${checkBuild}\"")
        endif()
    endif()
endfunction()


# Check versions
check_semver_version_("" "" "" "" FALSE)
check_semver_version_("0" "" "" "" FALSE)
check_semver_version_("0.0" "" "" "" FALSE)
check_semver_version_("0.0.0" "0.0.0" "" "" TRUE)
check_semver_version_("0.0.0.0" "0.0.0.0" "" "" FALSE)
check_semver_version_("0.0.01" "" "" "" FALSE)
check_semver_version_("0.10.9876543210" "0.10.9876543210" "" "" TRUE)
check_semver_version_("1.2.3-alpha" "1.2.3" "alpha" "" TRUE)
check_semver_version_("1.2.3+alpha" "1.2.3" "" "alpha" TRUE)
check_semver_version_("1.2.3-alpha+alpha" "1.2.3" "alpha" "alpha" TRUE)
check_semver_version_("1.2.3-a." "1.2.3" "a." "" FALSE)
check_semver_version_("1.2.3-a.-" "1.2.3" "a.-" "" TRUE)
check_semver_version_("1.2.3-a.-." "1.2.3" "a.-." "" FALSE)
check_semver_version_("1.2.3-a.-.0" "1.2.3" "a.-.0" "" TRUE)
check_semver_version_("1.2.3-a.-.01" "1.2.3" "a.-.01" "" FALSE)
check_semver_version_("1.2.3-rc3" "1.2.3" "rc3" "" TRUE)




function(check_semver_spec_ spec checkMinBase checkMinPre checkMinBuild
        checkMaxBase checkMaxPre checkMaxBuild checkMaxClosed checkValid)
    semver_splitSpec_("${spec}" minBase_ minPre_ minBuild_ minClosed_
        maxBase_ maxPre_ maxBuild_ maxClosed_ valid_)
    if((NOT valid_ AND checkValid) OR (valid_ AND NOT checkValid))
        if(checkValid)
            message(FATAL_ERROR "\"${spec}\" is NOT valid!!")
        else()
            message(FATAL_ERROR "\"${spec}\" is valid!!")
        endif()
    endif()

    if(valid_)
        if(NOT "${minBase_}" STREQUAL "${checkMinBase}")
            message(FATAL_ERROR "From \"${spec}\" 1-> \"${minBase_}\" differs from \"${checkMinBase}\"")
        endif()
        if(NOT "${minPre_}" STREQUAL "${checkMinPre}")
            message(FATAL_ERROR "From \"${spec}\" 2-> \"${minPre_}\" differs from \"${checkMinPre}\"")
        endif()
        if(NOT "${minBuild_}" STREQUAL "${checkMinBuild}")
            message(FATAL_ERROR "From \"${spec}\" 3-> \"${minBuild_}\" differs from \"${checkMinBuild}\"")
        endif()
        if(NOT minClosed_)
            message(FATAL_ERROR "From \"${spec}\" min OPEN!!!")
        endif()
        if(NOT "${maxBase_}" STREQUAL "${checkMaxBase}")
            message(FATAL_ERROR "From \"${spec}\" 4-> \"${maxBase_}\" differs from \"${checkMaxBase}\"")
        endif()
        if(NOT "${maxPre_}" STREQUAL "${checkMaxPre}")
            message(FATAL_ERROR "From \"${spec}\" 5-> \"${maxPre_}\" differs from \"${checkMaxPre}\"")
        endif()
        if(NOT "${maxBuild_}" STREQUAL "${checkMaxBuild}")
            message(FATAL_ERROR "From \"${spec}\" 6-> \"${maxBuild_}\" differs from \"${checkMaxBuild}\"")
        endif()
        if((NOT maxClosed_ AND checkMaxClosed) OR (maxClosed_ AND NOT checkMaxClosed))
            if(checkMaxClosed)
                message(FATAL_ERROR "From \"${spec}\" max OPEN!!!")
            else()
                message(FATAL_ERROR "From \"${spec}\" max CLOSED!!!")
            endif()
        endif()
    endif()
endfunction()


# Check semver specifications/ranges
check_semver_spec_("0" "0" "" "" "0" "" "" TRUE TRUE)
check_semver_spec_("0.0.0.0" "0.0.0.0" "" "" "0.0.0.0" "" "" TRUE FALSE)
check_semver_spec_("0-pre" "0" "pre" "" "0" "pre" "" TRUE TRUE)
check_semver_spec_("0+build" "0" "" "build" "0" "" "build" TRUE TRUE)
check_semver_spec_("0-pre+build" "0" "pre" "build" "0" "pre" "build" TRUE TRUE)
check_semver_spec_("0...0" "0" "" "" "0" "" "" TRUE TRUE)
check_semver_spec_("..." "" "" "" "" "" "" TRUE FALSE)
check_semver_spec_("0..." "0" "" "" "" "" "" TRUE FALSE)
check_semver_spec_("...0" "" "" "" "0" "" "" TRUE FALSE)
check_semver_spec_("0...<0" "0" "" "" "0" "" "" FALSE TRUE)
check_semver_spec_("0...<1.2.3-rc7+sha1-555.989898" "0" "" "" "1.2.3" "rc7" "sha1-555.989898" FALSE TRUE)
check_semver_spec_("0+build+...0" "0" "" "build" "0" "" "" TRUE FALSE)
check_semver_spec_("0...0+build+" "0" "" "" "0" "" "build" TRUE FALSE)
check_semver_spec_("0-pre-...0" "0" "pre-" "" "0" "" "" TRUE TRUE)
check_semver_spec_("0...0-pre-" "0" "" "" "0" "pre-" "" TRUE TRUE)
